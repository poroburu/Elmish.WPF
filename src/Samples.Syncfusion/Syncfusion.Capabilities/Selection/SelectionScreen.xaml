<UserControl x:Class="Elmish.WPF.Samples.Capabilities.SelectionScreen"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:root="clr-namespace:Elmish.WPF.Samples.Capabilities"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
  <StackPanel Orientation="Vertical">
    <StackPanel Orientation="Horizontal">
      <StackPanel Orientation="Vertical">
        <StackPanel Orientation="Horizontal">
          <TextBlock Text="Selected index: "/>
          <TextBlock Text="{Binding SelectedIndex}"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Margin="6">
          <Button Command="{Binding DeselectIndex}" Content="Deselect" Height="25" Width="75" Margin="6"/>
          <ListBox ItemsSource="{Binding SelectedIndexData}" SelectedIndex="{Binding SelectedIndex}" Margin="6"/>
        </StackPanel>
      </StackPanel>
      <TextBlock>
        The simplest way to handle selection is via a TwoWay binding on
        <Hyperlink NavigateUri="https://docs.microsoft.com/en-us/dotnet/api/system.windows.controls.primitives.selector.selectedindex#System_Windows_Controls_Primitives_Selector_SelectedIndex"
                   RequestNavigate="Hyperlink_RequestNavigate">
          Selector.SelectedIndex
        </Hyperlink>
        . The selection is empty when the value is -1.
      </TextBlock>
    </StackPanel>
    <Separator Margin="12"/>
    <StackPanel Orientation="Horizontal">
      <StackPanel Orientation="Vertical" Width="130">
        <StackPanel Orientation="Horizontal">
          <TextBlock Text="Selected value: "/>
          <TextBlock Text="{Binding SelectedValue}"/>
        </StackPanel>
        <TreeView ItemsSource="{Binding SelectedValueData}" SelectedValuePath="Data" Height="100" Margin="6">
          <i:Interaction.Behaviors>
            <root:BindableSelectedValue SelectedValue="{Binding SelectedValue, Mode=OneWayToSource}" />
          </i:Interaction.Behaviors>
          <TreeView.ItemTemplate>
            <HierarchicalDataTemplate ItemsSource="{Binding SelectedValueChildren}">
              <TextBlock Text="{Binding Data}"/>
            </HierarchicalDataTemplate>
          </TreeView.ItemTemplate>
        </TreeView>
      </StackPanel>
      <TextBlock>
        The
        <Hyperlink NavigateUri="https://docs.microsoft.com/en-us/dotnet/api/system.windows.controls.treeview"
                   RequestNavigate="Hyperlink_RequestNavigate">
          TreeView
        </Hyperlink>
        class does not have a SelectedIndex property, but it does have
        <Hyperlink NavigateUri="https://docs.microsoft.com/en-us/dotnet/api/system.windows.controls.treeview.selectedvalue#System_Windows_Controls_TreeView_SelectedValue"
                   RequestNavigate="Hyperlink_RequestNavigate">
          SelectedValue
        </Hyperlink>
        and
        <Hyperlink NavigateUri="https://docs.microsoft.com/en-us/dotnet/api/system.windows.controls.treeview.selectedvaluepath#System_Windows_Controls_TreeView_SelectedValuePath"
                   RequestNavigate="Hyperlink_RequestNavigate">
          SelectedValuePath
        </Hyperlink>
        properties. They can be used to read (but not write) the current selection.
      </TextBlock>
    </StackPanel>
  </StackPanel>
</UserControl>